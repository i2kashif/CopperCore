name: CopperCore ERP - CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '18'
  PNPM_VERSION: '8'

jobs:
  test:
    name: Test & Build
    runs-on: ubuntu-latest
    
    # Ephemeral Supabase database for testing
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: coppercore_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Setup test environment
        run: |
          cp .env.example .env
          echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/coppercore_test" >> .env
          echo "NODE_ENV=test" >> .env
          
      # Database setup (once we have migrations)
      - name: Run database migrations
        run: |
          echo "🔧 Database migrations will be run here once implemented"
          # pnpm db:migrate
        continue-on-error: true

      - name: Seed test database  
        run: |
          echo "🌱 Database seeding will be run here once implemented"
          # pnpm db:seed
        continue-on-error: true

      - name: Run RLS tests
        run: |
          echo "🧪 RLS tests will be run here once implemented" 
          # pnpm test:rls
        continue-on-error: true

      - name: Lint code
        run: |
          echo "🔍 Linting will be run here once configured"
          # pnpm lint
        continue-on-error: true

      - name: Type check
        run: |
          echo "📝 Type checking will be run here once configured"
          # pnpm typecheck
        continue-on-error: true

      - name: Run unit tests
        run: |
          echo "🧪 Unit tests will be run here once implemented"
          # pnpm test:unit
        continue-on-error: true

      - name: Run E2E tests
        run: |
          echo "🎭 E2E tests will be run here once implemented"
          # pnpm test:e2e
        continue-on-error: true

      - name: Build application
        run: |
          echo "🏗️ Build will be run here once configured"
          # pnpm build
        continue-on-error: true

      # Artifact uploads for debugging
      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results
          path: |
            test-results/
            playwright-report/
            coverage/
          retention-days: 7

      - name: Upload build artifacts  
        uses: actions/upload-artifact@v3
        if: success()
        with:
          name: build-artifacts
          path: |
            dist/
            build/
          retention-days: 30

  # Deployment job (placeholder)
  deploy:
    name: Deploy (Staging)
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/develop' && success()
    
    steps:
      - name: Placeholder deployment
        run: |
          echo "🚀 Deployment will be configured here"
          echo "Will deploy to staging environment on develop branch"
          
  # Production deployment  
  deploy-prod:
    name: Deploy (Production)
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && success()
    environment: production
    
    steps:
      - name: Placeholder production deployment
        run: |
          echo "🚀 Production deployment will be configured here"
          echo "Will deploy to production environment on main branch"